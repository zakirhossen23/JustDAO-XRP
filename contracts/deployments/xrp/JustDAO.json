{
  "address": "0x11477dE8C35fa2f271DfeB37Ab9A7548193A4CAF",
  "abi": [
    {
      "inputs": [],
      "name": "_dao_ids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_dao_uris",
      "outputs": [
        {
          "internalType": "string",
          "name": "dao_wallet",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "dao_uri",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "finished",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "_donated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_donations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ideas_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "wallet",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "donation",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_donations_ids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_goal_ids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_goal_uris",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "dao_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "goal_uri",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_ideas_ids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_ideas_uris",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "goal_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "ideas_uri",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "donation",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_ideas_vote_ids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_join_ids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_joined_person",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "daoid",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "wallet",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_message_ids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_message_read_ids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_reply_ids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_smart_contract_ids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_smart_contracts_uris",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "smart_contract_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ideas_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "smart_contract_uri",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_template_uris",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "_user_badges",
      "outputs": [
        {
          "internalType": "string",
          "name": "wallet",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "dao",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "joined",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "goal",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "ideas",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "vote",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "donation",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "comment",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "reply",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ideas_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_doantion",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_donator",
          "type": "string"
        }
      ],
      "name": "add_donation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "all_goal_ideas_votes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "goal_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ideas_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "wallet",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "all_messages",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "message_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ideas_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "sender",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "all_read_messages",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "message_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ideas_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "wallet",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "msg_type",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "all_replies",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reply_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "message_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ideas_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_dao_wallet",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_dao_uri",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_template",
          "type": "string"
        }
      ],
      "name": "create_dao",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_goal_uri",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_dao_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_wallet",
          "type": "string"
        }
      ],
      "name": "create_goal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_goal_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ideas_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_wallet",
          "type": "string"
        }
      ],
      "name": "create_goal_ideas_vote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_ideas_uri",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_goal_id",
          "type": "uint256"
        },
        {
          "internalType": "string[]",
          "name": "_smart_contracts",
          "type": "string[]"
        },
        {
          "internalType": "string",
          "name": "_wallet",
          "type": "string"
        }
      ],
      "name": "create_ideas",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dao_id",
          "type": "uint256"
        }
      ],
      "name": "dao_uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ideas_id",
          "type": "uint256"
        }
      ],
      "name": "getMsgIDs",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_message_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "msg_type",
          "type": "string"
        }
      ],
      "name": "getReadMsg",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "message_id",
          "type": "uint256"
        }
      ],
      "name": "getReplyIDs",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_all_daos",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_all_goals",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dao_id",
          "type": "uint256"
        }
      ],
      "name": "get_all_goals_by_dao_id",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_all_ideas",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_goal_id",
          "type": "uint256"
        }
      ],
      "name": "get_all_ideas_by_goal_id",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_goal_uri",
          "type": "string"
        }
      ],
      "name": "get_goal_id_by_goal_uri",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_ideas_uri",
          "type": "string"
        }
      ],
      "name": "get_goal_id_from_ideas_uri",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_ideas_uri",
          "type": "string"
        }
      ],
      "name": "get_ideas_id_by_ideas_uri",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_goal_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ideas_id",
          "type": "uint256"
        }
      ],
      "name": "get_ideas_votes_from_goal",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_goal_id",
          "type": "uint256"
        }
      ],
      "name": "goal_uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ideas_id",
          "type": "uint256"
        }
      ],
      "name": "ideas_uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "wallet",
          "type": "string"
        }
      ],
      "name": "is_person_joined",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dao_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "person",
          "type": "string"
        }
      ],
      "name": "join_community",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reset_all",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ideas_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_sender",
          "type": "string"
        }
      ],
      "name": "sendMsg",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_message_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ideas_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_wallet",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "msg_type",
          "type": "string"
        }
      ],
      "name": "sendReadMsg",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_message_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_reply",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "ideas_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_wallet",
          "type": "string"
        }
      ],
      "name": "sendReply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dao_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_dao_wallet",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_dao_uri",
          "type": "string"
        }
      ],
      "name": "set_dao",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_goal_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_goal_uri",
          "type": "string"
        }
      ],
      "name": "set_goal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ideas_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_ideas_uri",
          "type": "string"
        }
      ],
      "name": "set_ideas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dao_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_template",
          "type": "string"
        }
      ],
      "name": "update_template",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1a74985b1dc1ae985c63737fa9e953adf11b9dc431c7a872b60bf8d6ebbf001b",
  "receipt": {
    "to": null,
    "from": "0x86bb6d6E18c5Eeaca1e83C1E6162Cc433dcC70A4",
    "contractAddress": "0x11477dE8C35fa2f271DfeB37Ab9A7548193A4CAF",
    "transactionIndex": 0,
    "gasUsed": "3767480",
    "logsBloom": "0x
    "blockHash": "0x2557edffb14a19ccbd6775964cfaebaf9da5bc89137e6b62d9adb30704b2da80",
    "transactionHash": "0x1a74985b1dc1ae985c63737fa9e953adf11b9dc431c7a872b60bf8d6ebbf001b",
    "logs": [],
    "blockNumber": 4735692,
    "cumulativeGasUsed": "3767480",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c2250fab6ab78bf635c7d887cdf2d608",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_dao_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_dao_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"finished\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"_donated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_donations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"wallet\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_donations_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_goal_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_goal_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"goal_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_ideas_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_vote_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_join_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_joined_person\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"daoid\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"wallet\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_message_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_message_read_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_reply_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_smart_contract_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_smart_contracts_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"smart_contract_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"smart_contract_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_template_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"_user_badges\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"wallet\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"dao\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"joined\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"goal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ideas\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"donation\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"comment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reply\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_doantion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_donator\",\"type\":\"string\"}],\"name\":\"add_donation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_goal_ideas_votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"wallet\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sender\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_read_messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_replies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reply_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_template\",\"type\":\"string\"}],\"name\":\"create_dao\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_wallet\",\"type\":\"string\"}],\"name\":\"create_goal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_wallet\",\"type\":\"string\"}],\"name\":\"create_goal_ideas_vote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"_smart_contracts\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"_wallet\",\"type\":\"string\"}],\"name\":\"create_ideas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"dao_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"}],\"name\":\"getMsgIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"name\":\"getReadMsg\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"}],\"name\":\"getReplyIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_daos\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_goals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"get_all_goals_by_dao_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_ideas\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"get_all_ideas_by_goal_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_by_goal_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_from_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_ideas_id_by_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"get_ideas_votes_from_goal\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"goal_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"ideas_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"wallet\",\"type\":\"string\"}],\"name\":\"is_person_joined\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"person\",\"type\":\"string\"}],\"name\":\"join_community\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reset_all\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_sender\",\"type\":\"string\"}],\"name\":\"sendMsg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"name\":\"sendReadMsg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reply\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_wallet\",\"type\":\"string\"}],\"name\":\"sendReply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"}],\"name\":\"set_dao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"set_goal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"set_ideas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_template\",\"type\":\"string\"}],\"name\":\"update_template\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/JustDAO.sol\":\"JustDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/JustDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport './utils/Strings.sol';\\r\\ncontract JustDAO {\\r\\n    struct dao_uri_struct {\\r\\n        string dao_wallet;\\r\\n        string dao_uri;\\r\\n        string finished;\\r\\n    }\\r\\n    struct goal_uri_struct {\\r\\n        uint256 dao_id;\\r\\n        string goal_uri;\\r\\n    }\\r\\n\\r\\n    struct ideas_uri_struct {\\r\\n        uint256 goal_id;\\r\\n        string ideas_uri;\\r\\n        uint256 donation;\\r\\n    }\\r\\n\\r\\n    struct donation_struct {\\r\\n        uint256 ideas_id;\\r\\n        string wallet;\\r\\n        uint256 donation;\\r\\n    }\\r\\n\\r\\n    struct smart_contract_uri_struct {\\r\\n        uint256 smart_contract_id;\\r\\n        uint256 ideas_id;\\r\\n        string smart_contract_uri;\\r\\n    }\\r\\n    struct goal_ideas_votes_struct {\\r\\n        uint256 goal_id;\\r\\n        uint256 ideas_id;\\r\\n        string wallet;\\r\\n    }\\r\\n    struct message_struct {\\r\\n        uint256 message_id;\\r\\n        uint256 ideas_id;\\r\\n        string message;\\r\\n        string sender;\\r\\n    }\\r\\n    struct message_read_struct {\\r\\n        uint256 message_id;\\r\\n        uint256 ideas_id;\\r\\n        string wallet;\\r\\n        string msg_type;\\r\\n    }\\r\\n    struct reply_struct {\\r\\n        uint256 reply_id;\\r\\n        uint256 message_id;\\r\\n        uint256 ideas_id;\\r\\n        string message;\\r\\n    }\\r\\n\\r\\n    struct UnbondingRequest {\\r\\n        int64 completionTime;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    struct join_struct {\\r\\n        uint256 daoid;\\r\\n        string wallet;\\r\\n    }\\r\\n\\r\\n    struct user_badge_struct {\\r\\n        string wallet;\\r\\n        bool dao;\\r\\n        bool joined;\\r\\n        bool goal;\\r\\n        bool ideas;\\r\\n        bool vote;\\r\\n        bool donation;\\r\\n        bool comment;\\r\\n        bool reply;\\r\\n    }\\r\\n    uint256 public _dao_ids;\\r\\n    uint256 public _donations_ids;\\r\\n    uint256 public _goal_ids;\\r\\n    uint256 public _ideas_ids;\\r\\n    uint256 public _join_ids;\\r\\n    uint256 public _smart_contract_ids;\\r\\n    uint256 public _ideas_vote_ids;\\r\\n    uint256 public _message_ids;\\r\\n    uint256 public _message_read_ids;\\r\\n    uint256 public _reply_ids;\\r\\n    mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\\r\\n    mapping(uint256 => string) public _template_uris; //_dao_ids              => (Dao)                   Template HTML Code\\r\\n    mapping(uint256 => join_struct) public _joined_person; //_join_ids             => (Dao)                  join_struct\\r\\n\\r\\n    mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\\r\\n    mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\\r\\n    mapping(string => uint256) public _donated; //string            => (Donated to ideas)                amount\\r\\n    mapping(uint256 => donation_struct) public _donations; //uint256            => donation_struct\\r\\n    mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\\r\\n    mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + Wallet\\r\\n\\r\\n    mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\\r\\n\\r\\n    mapping(uint256 => message_read_struct) public all_read_messages; // all_read_messages        => _message_read_ids + message_read_struct\\r\\n\\r\\n    mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\\r\\n    mapping(string => user_badge_struct) public _user_badges; //string            => user_badge_struct\\r\\n\\r\\n    //Daos\\r\\n    function create_dao(string memory _dao_wallet, string memory _dao_uri, string memory _template) public returns (uint256) {\\r\\n        //Create Dao into _dao_uris\\r\\n        _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, 'False');\\r\\n        _template_uris[_dao_ids] = _template;\\r\\n        _user_badges[_dao_wallet].dao = true;\\r\\n        _dao_ids++;\\r\\n\\r\\n        return _dao_ids;\\r\\n    }\\r\\n\\r\\n    function update_template(uint256 _dao_id, string memory _template) public {\\r\\n        _template_uris[_dao_id] = _template;\\r\\n    }\\r\\n\\r\\n    function set_dao(uint256 _dao_id, string memory _dao_wallet, string memory _dao_uri) public {\\r\\n        //Set Dao of wallet and uri\\r\\n        _dao_uris[_dao_id].dao_wallet = _dao_wallet;\\r\\n        _dao_uris[_dao_id].dao_uri = _dao_uri;\\r\\n    }\\r\\n\\r\\n    function get_all_daos() public view returns (string[] memory) {\\r\\n        //Getting all doas\\r\\n        string[] memory _StoreInfo = new string[](_dao_ids);\\r\\n        for (uint256 i = 0; i < _dao_ids; i++) {\\r\\n            _StoreInfo[i] = _dao_uris[i].dao_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function dao_uri(uint256 _dao_id) public view returns (string memory) {\\r\\n        //Getting one dao URI\\r\\n        return _dao_uris[_dao_id].dao_uri;\\r\\n    }\\r\\n\\r\\n    //Goals\\r\\n    function create_goal(string memory _goal_uri, uint256 _dao_id,string memory _wallet) public returns (uint256) {\\r\\n        //Create goal into _goal_uris\\r\\n        _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\\r\\n        _user_badges[_wallet].goal = true;\\r\\n        _goal_ids++;\\r\\n\\r\\n        return _goal_ids;\\r\\n    }\\r\\n\\r\\n    function set_goal(uint256 _goal_id, string memory _goal_uri) public {\\r\\n        //Set goal uri\\r\\n        _goal_uris[_goal_id].goal_uri = _goal_uri;\\r\\n    }\\r\\n\\r\\n    function get_all_goals() public view returns (string[] memory) {\\r\\n        //Getting all goals\\r\\n        string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            _StoreInfo[i] = _goal_uris[i].goal_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_all_goals_by_dao_id(uint256 _dao_id) public view returns (string[] memory) {\\r\\n        //Getting all goals by dao id\\r\\n        string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            if (_goal_uris[i].dao_id == _dao_id) {\\r\\n                _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\\r\\n                _store_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_goal_id_by_goal_uri(string memory _goal_uri) public view returns (uint256) {\\r\\n        //Getting goal id by uri\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            if (keccak256(bytes(_goal_uris[i].goal_uri)) == keccak256(bytes(_goal_uri))) return i;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function goal_uri(uint256 _goal_id) public view returns (string memory) {\\r\\n        //Getting one goal URI\\r\\n        return _goal_uris[_goal_id].goal_uri;\\r\\n    }\\r\\n\\r\\n    //Ideas\\r\\n    function create_ideas(string memory _ideas_uri, uint256 _goal_id, string[] memory _smart_contracts,string memory _wallet) public returns (uint256) {\\r\\n        //Create ideas into _ideas_uris\\r\\n        _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\\r\\n        _user_badges[_wallet].ideas = true;\\r\\n        _ideas_ids++;\\r\\n\\r\\n        for (uint256 i = 0; i < _smart_contracts.length; i++) {\\r\\n            create_ideas_smart_contract(_ideas_ids, _smart_contract_ids, _smart_contracts[i]);\\r\\n            _smart_contract_ids++;\\r\\n        }\\r\\n\\r\\n        return _ideas_ids;\\r\\n    }\\r\\n\\r\\n    function create_ideas_smart_contract(uint256 _ideas_id, uint256 _smart_contract_id, string memory _smart_contract) private {\\r\\n        _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(_ideas_id, _smart_contract_id, _smart_contract);\\r\\n    }\\r\\n\\r\\n    function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\\r\\n        _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\\r\\n    }\\r\\n\\r\\n    function add_donation(uint256 _ideas_id, uint256 _doantion, string memory _donator) public {\\r\\n        _user_badges[_donator].donation = true;\\r\\n        _ideas_uris[_ideas_id].donation += _doantion;\\r\\n        _donated[_donator] += _doantion;\\r\\n        _donations[_donations_ids] = donation_struct(_ideas_id, _donator, _doantion);\\r\\n        _donations_ids++;\\r\\n    }\\r\\n\\r\\n    function join_community(uint256 dao_id, string memory person) public {\\r\\n        _user_badges[person].joined = true;\\r\\n        _joined_person[_join_ids] = join_struct({daoid: dao_id, wallet: person});\\r\\n        _join_ids++;\\r\\n    }\\r\\n\\r\\n    function is_person_joined(string memory wallet) public view returns (bool) {\\r\\n        //Getting goal id by uri\\r\\n        for (uint256 i = 0; i < _join_ids; i++) {\\r\\n            if (keccak256(bytes(_joined_person[i].wallet)) == keccak256(bytes(wallet))) return true;\\r\\n        }\\r\\n\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function get_all_ideas() public view returns (string[] memory) {\\r\\n        //Getting all ideas\\r\\n        string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            _StoreInfo[i] = _ideas_uris[i].ideas_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_all_ideas_by_goal_id(uint256 _goal_id) public view returns (string[] memory) {\\r\\n        //Getting all ideas by goal id\\r\\n        string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (_ideas_uris[i].goal_id == _goal_id) _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\\r\\n            _store_id++;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_ideas_id_by_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\\r\\n        //Getting ideas id by uri\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return i;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function get_goal_id_from_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\\r\\n        //Getting ideas id by uri\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return _ideas_uris[i].goal_id;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\\r\\n        //Getting one ideas URI\\r\\n        return _ideas_uris[_ideas_id].ideas_uri;\\r\\n    }\\r\\n\\r\\n    //Votes\\r\\n    function create_goal_ideas_vote(uint256 _goal_id, uint256 _ideas_id, string memory _wallet) public returns (uint256) {\\r\\n         _user_badges[_wallet].vote = true;\\r\\n        //Create votes into all_goal_ideas_votes\\r\\n        all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(_goal_id, _ideas_id, _wallet);\\r\\n        _ideas_vote_ids++;\\r\\n\\r\\n        return _ideas_vote_ids;\\r\\n    }\\r\\n\\r\\n    function get_ideas_votes_from_goal(uint256 _goal_id, uint256 _ideas_id) public view returns (string[] memory) {\\r\\n        //gets all ideas votes from goal\\r\\n        string[] memory _StoreInfo = new string[](_ideas_vote_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) {\\r\\n            if (all_goal_ideas_votes[i].goal_id == _goal_id && all_goal_ideas_votes[i].ideas_id == _ideas_id) _StoreInfo[_store_id] = all_goal_ideas_votes[i].wallet;\\r\\n            _store_id++;\\r\\n        }\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    //Messages\\r\\n    function sendMsg(uint256 _ideas_id, string memory _message, string memory _sender) public returns (uint256) {\\r\\n            _user_badges[_sender].comment = true;\\r\\n        //Create messsage into all_messages\\r\\n        all_messages[_message_ids] = message_struct(_message_ids, _ideas_id, _message, _sender);\\r\\n        _message_ids++;\\r\\n\\r\\n        return _message_ids;\\r\\n    }\\r\\n\\r\\n    function getMsgIDs(uint256 ideas_id) public view returns (uint256[] memory) {\\r\\n        //Getting all messages ids by idea id\\r\\n        uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\\r\\n        uint256 _msg_id;\\r\\n        for (uint256 i = 0; i < _message_ids; i++) {\\r\\n            if (all_messages[i].ideas_id == ideas_id) {\\r\\n                _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\\r\\n                _msg_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _All_Ideas_Messages;\\r\\n    }\\r\\n\\r\\n    function sendReply(uint256 _message_id, string memory _reply,uint256 ideas_id,string memory _wallet) public returns (uint256) {\\r\\n          _user_badges[_wallet].reply = true;\\r\\n        //Create reply into all_replies\\r\\n        all_replies[_reply_ids] = reply_struct(_reply_ids, _message_id,ideas_id, _reply);\\r\\n        _reply_ids++;\\r\\n\\r\\n        return _reply_ids;\\r\\n    }\\r\\n\\r\\n    function getReplyIDs(uint256 message_id) public view returns (uint256[] memory) {\\r\\n        //Getting all messages ids by idea id\\r\\n        uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\\r\\n        uint256 _reply_id;\\r\\n        for (uint256 i = 0; i < _reply_ids; i++) {\\r\\n            if (all_replies[i].message_id == message_id) {\\r\\n                _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\\r\\n                _reply_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _All_Messages_Replys;\\r\\n    }\\r\\n\\r\\n    function sendReadMsg(uint256 _message_id, uint256 _ideas_id,string memory _wallet, string memory msg_type) public returns (uint256) {\\r\\n        //Create messsage into all_messages\\r\\n        all_read_messages[_message_read_ids] = message_read_struct(_message_id, _ideas_id, _wallet,msg_type);\\r\\n        _message_read_ids++;\\r\\n\\r\\n        return _message_read_ids;\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n  function getReadMsg(uint256 _message_id, string memory msg_type)  public view returns (bool) {\\r\\n       \\r\\n       bool read = false;\\r\\n        for (uint256 i = 0; i < _message_read_ids; i++) {\\r\\n            if (all_read_messages[i].message_id == _message_id && keccak256(bytes(msg_type)) == keccak256(bytes(all_read_messages[i].msg_type))) {\\r\\n               read = true; \\r\\n            }\\r\\n        }\\r\\n\\r\\n        return read;\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n    function reset_all() public {\\r\\n        for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\\r\\n        for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\\r\\n        for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\\r\\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) delete all_goal_ideas_votes[i];\\r\\n        _dao_ids = 0;\\r\\n        _goal_ids = 0;\\r\\n        _ideas_ids = 0;\\r\\n        _message_ids = 0;\\r\\n        _reply_ids = 0;\\r\\n        _ideas_vote_ids = 0;\\r\\n    }\\r\\n\\r\\n   \\r\\n}\",\"keccak256\":\"0xb9794d90de63e8a5f1332b5c915289f53b97efcc4524a5c879f8240fe8f37c13\",\"license\":\"MIT\"},\"contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 100,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_dao_ids",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 102,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_donations_ids",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 104,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_goal_ids",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 106,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_ideas_ids",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 108,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_join_ids",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 110,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_smart_contract_ids",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 112,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_ideas_vote_ids",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 114,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_message_ids",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 116,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_message_read_ids",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 118,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_reply_ids",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 123,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_dao_uris",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_struct(dao_uri_struct)9_storage)"
      },
      {
        "astId": 127,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_template_uris",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 132,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_joined_person",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_struct(join_struct)79_storage)"
      },
      {
        "astId": 137,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_goal_uris",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint256,t_struct(goal_uri_struct)14_storage)"
      },
      {
        "astId": 142,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_ideas_uris",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_uint256,t_struct(ideas_uri_struct)21_storage)"
      },
      {
        "astId": 146,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_donated",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_string_memory_ptr,t_uint256)"
      },
      {
        "astId": 151,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_donations",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_uint256,t_struct(donation_struct)28_storage)"
      },
      {
        "astId": 156,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_smart_contracts_uris",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_uint256,t_struct(smart_contract_uri_struct)35_storage)"
      },
      {
        "astId": 161,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "all_goal_ideas_votes",
        "offset": 0,
        "slot": "18",
        "type": "t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)42_storage)"
      },
      {
        "astId": 166,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "all_messages",
        "offset": 0,
        "slot": "19",
        "type": "t_mapping(t_uint256,t_struct(message_struct)51_storage)"
      },
      {
        "astId": 171,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "all_read_messages",
        "offset": 0,
        "slot": "20",
        "type": "t_mapping(t_uint256,t_struct(message_read_struct)60_storage)"
      },
      {
        "astId": 176,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "all_replies",
        "offset": 0,
        "slot": "21",
        "type": "t_mapping(t_uint256,t_struct(reply_struct)69_storage)"
      },
      {
        "astId": 181,
        "contract": "contracts/JustDAO.sol:JustDAO",
        "label": "_user_badges",
        "offset": 0,
        "slot": "22",
        "type": "t_mapping(t_string_memory_ptr,t_struct(user_badge_struct)98_storage)"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_struct(user_badge_struct)98_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct JustDAO.user_badge_struct)",
        "numberOfBytes": "32",
        "value": "t_struct(user_badge_struct)98_storage"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_uint256,t_struct(dao_uri_struct)9_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct JustDAO.dao_uri_struct)",
        "numberOfBytes": "32",
        "value": "t_struct(dao_uri_struct)9_storage"
      },
      "t_mapping(t_uint256,t_struct(donation_struct)28_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct JustDAO.donation_struct)",
        "numberOfBytes": "32",
        "value": "t_struct(donation_struct)28_storage"
      },
      "t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)42_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct JustDAO.goal_ideas_votes_struct)",
        "numberOfBytes": "32",
        "value": "t_struct(goal_ideas_votes_struct)42_storage"
      },
      "t_mapping(t_uint256,t_struct(goal_uri_struct)14_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct JustDAO.goal_uri_struct)",
        "numberOfBytes": "32",
        "value": "t_struct(goal_uri_struct)14_storage"
      },
      "t_mapping(t_uint256,t_struct(ideas_uri_struct)21_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct JustDAO.ideas_uri_struct)",
        "numberOfBytes": "32",
        "value": "t_struct(ideas_uri_struct)21_storage"
      },
      "t_mapping(t_uint256,t_struct(join_struct)79_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct JustDAO.join_struct)",
        "numberOfBytes": "32",
        "value": "t_struct(join_struct)79_storage"
      },
      "t_mapping(t_uint256,t_struct(message_read_struct)60_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct JustDAO.message_read_struct)",
        "numberOfBytes": "32",
        "value": "t_struct(message_read_struct)60_storage"
      },
      "t_mapping(t_uint256,t_struct(message_struct)51_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct JustDAO.message_struct)",
        "numberOfBytes": "32",
        "value": "t_struct(message_struct)51_storage"
      },
      "t_mapping(t_uint256,t_struct(reply_struct)69_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct JustDAO.reply_struct)",
        "numberOfBytes": "32",
        "value": "t_struct(reply_struct)69_storage"
      },
      "t_mapping(t_uint256,t_struct(smart_contract_uri_struct)35_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct JustDAO.smart_contract_uri_struct)",
        "numberOfBytes": "32",
        "value": "t_struct(smart_contract_uri_struct)35_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(dao_uri_struct)9_storage": {
        "encoding": "inplace",
        "label": "struct JustDAO.dao_uri_struct",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "dao_wallet",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 6,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "dao_uri",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 8,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "finished",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(donation_struct)28_storage": {
        "encoding": "inplace",
        "label": "struct JustDAO.donation_struct",
        "members": [
          {
            "astId": 23,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "ideas_id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 25,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "wallet",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 27,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "donation",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(goal_ideas_votes_struct)42_storage": {
        "encoding": "inplace",
        "label": "struct JustDAO.goal_ideas_votes_struct",
        "members": [
          {
            "astId": 37,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "goal_id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 39,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "ideas_id",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 41,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "wallet",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(goal_uri_struct)14_storage": {
        "encoding": "inplace",
        "label": "struct JustDAO.goal_uri_struct",
        "members": [
          {
            "astId": 11,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "dao_id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 13,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "goal_uri",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(ideas_uri_struct)21_storage": {
        "encoding": "inplace",
        "label": "struct JustDAO.ideas_uri_struct",
        "members": [
          {
            "astId": 16,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "goal_id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 18,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "ideas_uri",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 20,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "donation",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(join_struct)79_storage": {
        "encoding": "inplace",
        "label": "struct JustDAO.join_struct",
        "members": [
          {
            "astId": 76,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "daoid",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 78,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "wallet",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(message_read_struct)60_storage": {
        "encoding": "inplace",
        "label": "struct JustDAO.message_read_struct",
        "members": [
          {
            "astId": 53,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "message_id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 55,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "ideas_id",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 57,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "wallet",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 59,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "msg_type",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(message_struct)51_storage": {
        "encoding": "inplace",
        "label": "struct JustDAO.message_struct",
        "members": [
          {
            "astId": 44,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "message_id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 46,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "ideas_id",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 48,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "message",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 50,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "sender",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(reply_struct)69_storage": {
        "encoding": "inplace",
        "label": "struct JustDAO.reply_struct",
        "members": [
          {
            "astId": 62,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "reply_id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 64,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "message_id",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 66,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "ideas_id",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 68,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "message",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(smart_contract_uri_struct)35_storage": {
        "encoding": "inplace",
        "label": "struct JustDAO.smart_contract_uri_struct",
        "members": [
          {
            "astId": 30,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "smart_contract_id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 32,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "ideas_id",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 34,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "smart_contract_uri",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(user_badge_struct)98_storage": {
        "encoding": "inplace",
        "label": "struct JustDAO.user_badge_struct",
        "members": [
          {
            "astId": 81,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "wallet",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 83,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "dao",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 85,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "joined",
            "offset": 1,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 87,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "goal",
            "offset": 2,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 89,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "ideas",
            "offset": 3,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 91,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "vote",
            "offset": 4,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 93,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "donation",
            "offset": 5,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 95,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "comment",
            "offset": 6,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 97,
            "contract": "contracts/JustDAO.sol:JustDAO",
            "label": "reply",
            "offset": 7,
            "slot": "1",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}